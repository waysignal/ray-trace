// 3x3
// let deter = Matrix::new(vec![vec![1.0,2.0,6.0],vec![-5.0,8.0,-4.0], vec![2.0,6.0,4.0]]);

// 4x4
// let deter = Matrix::new(vec![vec![-2.0,-8.0,3.0,5.0],
//                                         vec![-3.0,1.0,7.0,3.0], 
//                                         vec![1.0,2.0,-9.0,6.0],
//                                         vec![-6.0,7.0,7.0,-9.0]]);

// 4x4 invertible
// let a = Matrix::new(vec![vec![-5.0,2.0,6.0,-8.0],
//                                         vec![1.0,-5.0,1.0,8.0], 
//                                         vec![7.0,7.0,-6.0,-7.0],
//                                         vec![1.0,-3.0,7.0,4.0]]);

// 4x4 invertible 2
// let b = Matrix::new(vec![vec![9.0,3.0,0.0,9.0],
//                                         vec![-5.0,-2.0,-6.0,-3.0], 
//                                         vec![-4.0,9.0,6.0,4.0],
//                                         vec![-7.0,6.0,6.0,2.0]]);

// 4x4 uninvertible
// let deter = Matrix::new(vec![vec![-5.0,2.0,6.0,-8.0],
//                                         vec![1.0,-5.0,1.0,8.0], 
//                                         vec![7.0,7.0,-6.0,-7.0],
//                                         vec![0.0,0.0,0.0,0.0]]);